<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hog.bigdata.mapper.FarmerManagementMapper">
    <resultMap id="BaseResultMap" type="com.hog.bigdata.entity.FarmerManagement">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="farmer_name" property="farmerName" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="address_pcdt" property="addressPcdt" jdbcType="VARCHAR"/>
        <result column="address_details" property="addressDetails" jdbcType="VARCHAR"/>
        <result column="province" property="province" jdbcType="VARCHAR"/>
        <result column="city" property="city" jdbcType="VARCHAR"/>
        <result column="district" property="district" jdbcType="VARCHAR"/>
        <result column="town" property="town" jdbcType="VARCHAR"/>
        <result column="pig_cunlan" property="pigCunlan" jdbcType="INTEGER"/>
        <result column="new_flag" property="newFlag" jdbcType="INTEGER"/>
        <result column="town_name" property="townName" jdbcType="VARCHAR"/>
        <result column="create_by" property="createBy" jdbcType="VARCHAR"/>
        <result column="create_office" property="createOffice" jdbcType="VARCHAR"/>
        <result column="create_date" property="createDate" jdbcType="TIMESTAMP"/>
        <result column="update_date" property="updateDate" jdbcType="TIMESTAMP"/>
        <result column="update_by" property="updateBy" jdbcType="VARCHAR"/>
        <result column="remarks" property="remarks" jdbcType="VARCHAR"/>
    </resultMap>
    <sql id="Base_Column_List">
    id, farmer_name, phone, address_pcdt, address_details, province, city, district, 
    town, pig_cunlan, new_flag, town_name, create_by, create_office, create_date, update_date, 
    update_by, remarks
  </sql>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer">
        select
        <include refid="Base_Column_List"/>
        from two_farmer_management
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from two_farmer_management
    where id = #{id,jdbcType=INTEGER}
  </delete>
    <insert id="insert" parameterType="com.hog.bigdata.entity.FarmerManagement">
    insert into two_farmer_management (farmer_name, phone,
      address_pcdt, address_details, province, 
      city, district, town, 
      pig_cunlan, new_flag, town_name, 
      create_by, create_office, create_date, 
      update_date, update_by, remarks
      )
    values (#{farmerName,jdbcType=VARCHAR}, #{phone,jdbcType=VARCHAR},
      #{addressPcdt,jdbcType=VARCHAR}, #{addressDetails,jdbcType=VARCHAR}, #{province,jdbcType=VARCHAR}, 
      #{city,jdbcType=VARCHAR}, #{district,jdbcType=VARCHAR}, #{town,jdbcType=VARCHAR}, 
      #{pigCunlan,jdbcType=INTEGER}, #{newFlag,jdbcType=INTEGER}, #{townName,jdbcType=VARCHAR}, 
      #{createBy,jdbcType=VARCHAR}, #{createOffice,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{updateDate,jdbcType=TIMESTAMP}, #{updateBy,jdbcType=VARCHAR}, #{remarks,jdbcType=VARCHAR}
      )
  </insert>
    <insert id="insertSelective" parameterType="com.hog.bigdata.entity.FarmerManagement">
        insert into two_farmer_management
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="farmerName != null">
                farmer_name,
            </if>
            <if test="phone != null">
                phone,
            </if>
            <if test="addressPcdt != null">
                address_pcdt,
            </if>
            <if test="addressDetails != null">
                address_details,
            </if>
            <if test="province != null">
                province,
            </if>
            <if test="city != null">
                city,
            </if>
            <if test="district != null">
                district,
            </if>
            <if test="town != null">
                town,
            </if>
            <if test="pigCunlan != null">
                pig_cunlan,
            </if>
            <if test="newFlag != null">
                new_flag,
            </if>
            <if test="townName != null">
                town_name,
            </if>
            <if test="createBy != null">
                create_by,
            </if>
            <if test="createOffice != null">
                create_office,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
            <if test="updateBy != null">
                update_by,
            </if>
            <if test="remarks != null">
                remarks,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="farmerName != null">
                #{farmerName,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                #{phone,jdbcType=VARCHAR},
            </if>
            <if test="addressPcdt != null">
                #{addressPcdt,jdbcType=VARCHAR},
            </if>
            <if test="addressDetails != null">
                #{addressDetails,jdbcType=VARCHAR},
            </if>
            <if test="province != null">
                #{province,jdbcType=VARCHAR},
            </if>
            <if test="city != null">
                #{city,jdbcType=VARCHAR},
            </if>
            <if test="district != null">
                #{district,jdbcType=VARCHAR},
            </if>
            <if test="town != null">
                #{town,jdbcType=VARCHAR},
            </if>
            <if test="pigCunlan != null">
                #{pigCunlan,jdbcType=INTEGER},
            </if>
            <if test="newFlag != null">
                #{newFlag,jdbcType=INTEGER},
            </if>
            <if test="townName != null">
                #{townName,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createOffice != null">
                #{createOffice,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
                #{remarks,jdbcType=VARCHAR},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.hog.bigdata.entity.FarmerManagement">
        update two_farmer_management
        <set>
            <if test="farmerName != null">
                farmer_name = #{farmerName,jdbcType=VARCHAR},
            </if>
            <if test="phone != null">
                phone = #{phone,jdbcType=VARCHAR},
            </if>
            <if test="addressPcdt != null">
                address_pcdt = #{addressPcdt,jdbcType=VARCHAR},
            </if>
            <if test="addressDetails != null">
                address_details = #{addressDetails,jdbcType=VARCHAR},
            </if>
            <if test="province != null">
                province = #{province,jdbcType=VARCHAR},
            </if>
            <if test="city != null">
                city = #{city,jdbcType=VARCHAR},
            </if>
            <if test="district != null">
                district = #{district,jdbcType=VARCHAR},
            </if>
            <if test="town != null">
                town = #{town,jdbcType=VARCHAR},
            </if>
            <if test="pigCunlan != null">
                pig_cunlan = #{pigCunlan,jdbcType=INTEGER},
            </if>
            <if test="newFlag != null">
                new_flag = #{newFlag,jdbcType=INTEGER},
            </if>
            <if test="townName != null">
                town_name = #{townName,jdbcType=VARCHAR},
            </if>
            <if test="createBy != null">
                create_by = #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="createOffice != null">
                create_office = #{createOffice,jdbcType=VARCHAR},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="remarks != null">
                remarks = #{remarks,jdbcType=VARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.hog.bigdata.entity.FarmerManagement">
    update two_farmer_management
    set farmer_name = #{farmerName,jdbcType=VARCHAR},
      phone = #{phone,jdbcType=VARCHAR},
      address_pcdt = #{addressPcdt,jdbcType=VARCHAR},
      address_details = #{addressDetails,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      district = #{district,jdbcType=VARCHAR},
      town = #{town,jdbcType=VARCHAR},
      pig_cunlan = #{pigCunlan,jdbcType=INTEGER},
      new_flag = #{newFlag,jdbcType=INTEGER},
      town_name = #{townName,jdbcType=VARCHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      create_office = #{createOffice,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_date = #{updateDate,jdbcType=TIMESTAMP},
      update_by = #{updateBy,jdbcType=VARCHAR},
      remarks = #{remarks,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>

    <select id="findAllFarmer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from two_farmer_management
    </select>

    <insert id="batchInsert">
        INSERT INTO two_farmer_management(farmer_name, phone,
         address_details, province,
        city, district, town,
        pig_cunlan, new_flag, town_name,
        create_by, create_date,
        update_date, update_by)
        VALUES
        <foreach collection="farmerManagements" item="farmerManagement" separator=",">
            (#{farmerManagement.farmerName}, #{farmerManagement.phone},#{farmerManagement.addressDetails}, #{farmerManagement.province},
            #{farmerManagement.city},#{farmerManagement.district}, #{farmerManagement.town},#{farmerManagement.pigCunlan}, #{farmerManagement.newFlag},
            #{farmerManagement.townName},#{farmerManagement.createBy}, #{farmerManagement.createDate},
            #{farmerManagement.updateDate}, #{farmerManagement.updateBy})
        </foreach>
    </insert>
</mapper>